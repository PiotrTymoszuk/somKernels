// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "somKernels_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BrayCurtis
Rcpp::XPtr<DistanceFunctionPtr> BrayCurtis();
RcppExport SEXP _somKernels_BrayCurtis() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(BrayCurtis());
    return rcpp_result_gen;
END_RCPP
}
// cosine
Rcpp::XPtr<DistanceFunctionPtr> cosine();
RcppExport SEXP _somKernels_cosine() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(cosine());
    return rcpp_result_gen;
END_RCPP
}
// dice
Rcpp::XPtr<DistanceFunctionPtr> dice();
RcppExport SEXP _somKernels_dice() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(dice());
    return rcpp_result_gen;
END_RCPP
}
// jaccard
Rcpp::XPtr<DistanceFunctionPtr> jaccard();
RcppExport SEXP _somKernels_jaccard() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(jaccard());
    return rcpp_result_gen;
END_RCPP
}
// smc
Rcpp::XPtr<DistanceFunctionPtr> smc();
RcppExport SEXP _somKernels_smc() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(smc());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_somKernels_BrayCurtis", (DL_FUNC) &_somKernels_BrayCurtis, 0},
    {"_somKernels_cosine", (DL_FUNC) &_somKernels_cosine, 0},
    {"_somKernels_dice", (DL_FUNC) &_somKernels_dice, 0},
    {"_somKernels_jaccard", (DL_FUNC) &_somKernels_jaccard, 0},
    {"_somKernels_smc", (DL_FUNC) &_somKernels_smc, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_somKernels(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
